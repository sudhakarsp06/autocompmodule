{"__symbolic":"module","version":3,"metadata":{"AutocompleteModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule"},"arguments":[{"declarations":[{"__symbolic":"reference","name":"AutocompleteComponent"}],"exports":[{"__symbolic":"reference","name":"AutocompleteComponent"}],"imports":[{"__symbolic":"reference","module":"@angular/forms","name":"FormsModule"},{"__symbolic":"reference","module":"@angular/platform-browser","name":"BrowserModule"}]}]}],"members":{}},"AutocompleteComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"autocomplete","template":"<div class=\"autocomplete container\"> <div class=\"wrapper-box\"> <div class=\"single-item-wrapper\"> <div *ngFor=\"let selected of selectedItems\" class=\"single-item\">{{selected.value}} <span (click)=\"removeItem(selected)\" class=\"close\">X</span> </div> </div> <textarea placeholder=\"Type in\" [(ngModel)]=\"searchInput\" class=\"text-box\" (keyup)=\"onSearch($event)\"></textarea> </div> <div class=\"list-wrapper\"> <ul class=\"list\" *ngIf=\"filteredItems.length > 0 && listState === true\"> <li (click)=\"onSelection(option);\" *ngFor=\"let option of filteredItems\">{{option.value}}</li> </ul> </div> </div>","styles":[".autocomplete.container { float: left;  } .autocomplete .wrapper-box { border: 1px solid #e0e0e0; min-width: 250px; min-height: 15px; float: left; padding: 4px; } .autocomplete .text-box, .autocomplete .text-box:focus { border: 0; width: auto; height: 15px; resize: none; text-align:left; background-color: #ffffff; outline: none; padding-top: 4px; } .autocomplete .single-item-wrapper { padding-right: 2px; display: inline-block; float: left; } .autocomplete .single-item { font-size: 12px; color: #000000; margin-left: 3px; display: inline-block; padding: 3px; background: #e0e0e0; border-radius: 4px; border:1px solid #cccccc; } .autocomplete .single-item:hover { background: #cccccc; } .autocomplete .single-item .close { float: right; width: 10px; padding-left: 3px; font-weight: bold; cursor: pointer; } .autocomplete .list-wrapper { float: left; clear: left; } .autocomplete .list { margin: 0; padding: 0; list-style-type: none; border: 1px solid #cccccc; position: absolute; min-width: 269px; max-height: 300px; overflow: auto; } .autocomplete .list li { padding-left: 3px; padding-bottom: 5px; padding-top: 3px; border-bottom: 1px solid #cccccc; } .autocomplete .list li:hover { background: #e0e0e0; cursor: pointer; }"],"encapsulation":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewEncapsulation"},"member":"None"}}]}],"members":{"onOptionSelection":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"options":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"},"arguments":["options"]}]}],"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}],"onSelection":[{"__symbolic":"method"}],"removeItem":[{"__symbolic":"method"}],"onSearch":[{"__symbolic":"method"}],"setFilteredItems":[{"__symbolic":"method"}],"resetFilteredItems":[{"__symbolic":"method"}]}}},"origins":{"AutocompleteModule":"./index","AutocompleteComponent":"./autocomplete.component"},"importAs":"autocompmodule"}